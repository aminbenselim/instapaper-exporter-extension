/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	var statusInterval;

	function save(highlights) {
	  var htmlParts = ["<html><head>\n    <meta charset=\"utf-8\">\n    <title>Instapaper Highlights Export</title>\n    <style type=\"text/css\">\n      body {\n        max-width: 800px;\n        margin: 50px auto;\n        line-height: 1.4;\n      }\n      h1 {\n        margin: 50px 0 1em;\n      }\n      h2 {\n        font-size: 1em;\n        font-weight: normal;\n        margin: 3em 0 1em;\n      }\n      blockquote {\n        background: #FFFCEE;\n        padding: 15px;\n        margin: 0 0 10px;\n        display: block;\n        font-size: 1.2em;\n      }\n      code {\n        background: #F7F7F7;\n        padding: 10px;\n      }\n      .json-export {\n        width: 100%;\n        font-family: monospace;\n      }\n    </style>\n  </head><body>\n  <a href=\"#html\">HTML</a> &bull; <a href=\"#json\">JSON</a>\n  <hr />\n  Extension by Stian Haklev\n  <hr />\n  <h1 id=\"html\">HTML Export</h1>"];
	  highlights.forEach(function (entry) {
	    var part = "<h2><a href=\"".concat(entry.source, "\" class=\"title\">").concat(entry.title, "</a></h2>\n                <blockquote class=\"highlight\">").concat(entry.highlight, "</blockquote>");
	    if (entry.note) part += "<small class=\"note\"><strong>Note:</strong> ".concat(entry.note, "</small>");
	    htmlParts.push(part);
	  });
	  htmlParts.push("<h1 id=\"json\">JSON Export</h1><textarea class=\"json-export\" rows=\"10\">".concat(JSON.stringify(highlights), "</textarea>"));
	  htmlParts.push("</body></html>");
	  var blob = new Blob(htmlParts, {
	    type: "text/html"
	  });
	  var size = blob.size + 1024 / 2;
	  var filename = "instapaper_highlights_export-".concat(Date.now(), ".html"); // create a blob for writing to a file

	  var reqFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;
	  reqFileSystem(window.TEMPORARY, size, function (fs) {
	    fs.root.getFile(filename, {
	      create: true
	    }, function (fileEntry) {
	      fileEntry.createWriter(function (fileWriter) {
	        fileWriter.onwriteend = openExport.bind(null, filename);
	        fileWriter.write(blob);
	      });
	    });
	  });
	}

	function openExport(filename) {
	  var url = "filesystem:chrome-extension://" + chrome.i18n.getMessage("@@extension_id") + "/temporary/" + filename;
	  chrome.downloads.download({
	    filename: filename,
	    url: url,
	    saveAs: true
	  });
	}

	function sendTabMessage(tab) {
	  chrome.tabs.sendMessage(tab.id, {
	    message: "scrape_page"
	  });
	}

	function handleActionClick(e) {
	  chrome.tabs.query({
	    active: true,
	    currentWindow: true
	  }, function (tabs) {
	    var activeTab = tabs[0];

	    if (activeTab.url.indexOf("instapaper.com/notes") >= 0) {
	      sendTabMessage(activeTab);
	    } else {
	      chrome.tabs.create({
	        url: "https://instapaper.com/notes"
	      }, handleNotesTabCreate);
	    }
	  });
	}

	function handleNotesTabCreate(tab) {
	  statusInterval = window.setInterval(function () {
	    chrome.tabs.get(tab.id, function (updatedTab) {
	      if (updatedTab.status === "complete") {
	        sendTabMessage(tab);
	        window.clearInterval(statusInterval);
	      }
	    });
	  }, 100);
	}

	function handleInstalled(details) {
	  if (details.reason === "install") {
	    chrome.tabs.create({
	      url: "https://github.com/sawyerh/instapaper-exporter-extension/blob/master/README.md"
	    });
	  }
	}

	function handleMessage(request, sender, callback) {
	  if (request.message === "save_highlights") {
	    save(request.highlights);
	  }
	}

	chrome.browserAction.onClicked.addListener(handleActionClick);
	chrome.runtime.onMessage.addListener(handleMessage);
	if (chrome.runtime.onInstalled) chrome.runtime.onInstalled.addListener(handleInstalled);

/***/ }
/******/ ]);